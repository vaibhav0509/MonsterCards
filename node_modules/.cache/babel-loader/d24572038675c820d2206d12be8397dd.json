{"ast":null,"code":"import _classCallCheck from\"/home/vaibhav/monster/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/vaibhav/monster/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/home/vaibhav/monster/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _createSuper from\"/home/vaibhav/monster/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/home/vaibhav/monster/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';import{CardList}from'./components/card-list/card-list.components';import{SearchBox}from'./components/searchbox/searchBox.components';// import logo from './logo.svg';\nimport'./App.css';// class Component is made \nvar App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);_this=_super.call(this);_this.handleChange=function(e){_this.setState({searchField:e.target.value});};_this.state={monster:[],searchField:''};_this.handleChange=_this.handleChange.bind(_assertThisInitialized(_this));// by we bind this keyword of our method to the this keyword of JS\n// but we don't want to do it as it for every new method we have to bind therefore we use ES6 arrow\n// function which automatically bind it \nreturn _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return _this2.setState({monster:users});});}},{key:\"render\",value:function render(){//destructuring because we don't want to modify our base statez\nvar _this$state=this.state,monster=_this$state.monster,searchField=_this$state.searchField;// filter() takes a function, include() checks if name is present in the array or not\nvar filteredMonster=monster.filter(function(monster){return monster.name.toLowerCase().includes(searchField.toLowerCase());});return/*#__PURE__*/React.createElement(\"div\",{className:\"App\"},/*#__PURE__*/React.createElement(\"h1\",{id:\"header_1\"},\"Monsters Cards\"),/*#__PURE__*/React.createElement(SearchBox,{placeholder:\"search monster\",handleChange:this.handleChange}),/*#__PURE__*/React.createElement(CardList,{monster:filteredMonster}));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/home/vaibhav/monster/src/App.js"],"names":["React","Component","CardList","SearchBox","App","handleChange","e","setState","searchField","target","value","state","monster","bind","fetch","then","response","json","users","filteredMonster","filter","name","toLowerCase","includes"],"mappings":"4rBAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CACA,OAAQC,QAAR,KAAwB,6CAAxB,CACA,OAAQC,SAAR,KAAyB,6CAAzB,CACA;AACA,MAAO,WAAP,CAEA;GACMC,CAAAA,G,0FACJ,cAAa,qCACX,wBADW,MAsBdC,YAtBc,CAsBC,SAAAC,CAAC,CAAI,CACnB,MAAKC,QAAL,CAAc,CAACC,WAAW,CAAGF,CAAC,CAACG,MAAF,CAASC,KAAxB,CAAd,EACA,CAxBa,CAEX,MAAKC,KAAL,CAAa,CACXC,OAAO,CAAG,EADC,CAEXJ,WAAW,CAAE,EAFF,CAAb,CAMA,MAAKH,YAAL,CAAoB,MAAKA,YAAL,CAAkBQ,IAAlB,+BAApB,CACA;AACA;AACA;AAXW,aAaZ,C,6EAEiB,iBAClBC,KAAK,CAAC,4CAAD,CAAL,CACCC,IADD,CACM,SAAAC,QAAQ,QAAIA,CAAAA,QAAQ,CAACC,IAAT,EAAJ,EADd,EAECF,IAFD,CAEM,SAAAG,KAAK,QAAI,CAAA,MAAI,CAACX,QAAL,CAAc,CAACK,OAAO,CAAGM,KAAX,CAAd,CAAJ,EAFX,EAIA,C,uCAMQ,CACN;AADM,gBAEyB,KAAKP,KAF9B,CAECC,OAFD,aAECA,OAFD,CAEUJ,WAFV,aAEUA,WAFV,CAGN;AACA,GAAMW,CAAAA,eAAe,CAAGP,OAAO,CAACQ,MAAR,CAAe,SAAAR,OAAO,QAAIA,CAAAA,OAAO,CAACS,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCf,WAAW,CAACc,WAAZ,EAApC,CAAJ,EAAtB,CAAxB,CACA,mBACE,2BAAK,SAAS,CAAC,KAAf,eACG,0BAAI,EAAE,CAAG,UAAT,mBADH,cAGE,oBAAC,SAAD,EAAY,WAAW,CAAG,gBAA1B,CACC,YAAY,CAAK,KAAKjB,YADvB,EAHF,cAMC,oBAAC,QAAD,EAAU,OAAO,CAAIc,eAArB,EAND,CADF,CAWD,C,iBA3CelB,S,EA8ClB,cAAeG,CAAAA,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport {CardList} from  './components/card-list/card-list.components'\nimport {SearchBox} from  './components/searchbox/searchBox.components'\n// import logo from './logo.svg';\nimport './App.css';\n\n// class Component is made \nclass App extends Component{\n  constructor(){\n    super();\n    this.state = {\n      monster : [],\n      searchField :''\n    };\n    \n\n    this.handleChange = this.handleChange.bind(this)\n    // by we bind this keyword of our method to the this keyword of JS\n    // but we don't want to do it as it for every new method we have to bind therefore we use ES6 arrow\n    // function which automatically bind it \n\n  } \n\n componentDidMount(){\n  fetch('https://jsonplaceholder.typicode.com/users')\n  .then(response => response.json())\n  .then(users => this.setState({monster : users}))\n\n } \n\n handleChange = e => {\n  this.setState({searchField : e.target.value, })\n }\n\n  render(){\n    //destructuring because we don't want to modify our base statez\n    const {monster, searchField} = this.state;\n    // filter() takes a function, include() checks if name is present in the array or not\n    const filteredMonster = monster.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n         <h1 id = 'header_1'>Monsters Cards</h1>\n        {/* SearchBox Component is made */}\n        <SearchBox  placeholder = 'search monster' \n         handleChange = { this.handleChange}/>\n        \n       <CardList monster = {filteredMonster} /> \n      </div>\n     \n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}